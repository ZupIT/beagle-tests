#
# Copyright 2020 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Beagle Appium Android tests
on:
  workflow_dispatch:
  workflow_run:
    workflows: [ "Beagle Appium tests trigger" ]
    types:
      - completed

# Bellow configuration is for testing this workflow without merging to main
#on:
#  push:
#    branches:
#      - main
#    paths:
#      - '.github/**'
#  pull_request:
#    branches:
#      - main
#    paths:
#      - '.github/**'

jobs:
  artifact_generation_job:
    name: Artifact Generation
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.BEAGLE_TEMP_PAT }}
          ref: ${{ github.event.workflow_run.head_branch }}
          submodules: 'true'

      - name: Update submodules
        run: git submodule update --init --recursive --remote

      - name: Print branch info
        run: git branch

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: Setup JDK (11)
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Generate the BFF jar file
        run: |
          if ./bff-server/gradlew bootJar -p bff-server; then
            echo "Gradle task succeeded" >&2
          else
            echo "Gradle task failed" >&2
            exit 1
          fi

      - name: Upload the BFF jar file
        uses: actions/upload-artifact@v2
        with:
          name: bff-jar-file
          path: bff-server/bff/build/libs/bff.jar
          if-no-files-found: error

      - name: Build project app-android to generate the .apk file
        run: bash ./appium/app-android/gradlew assembleDebug -p appium/app-android

      - name: Upload .apk file
        uses: actions/upload-artifact@v2
        with:
          name: apk-file
          path: ${{ github.workspace }}/appium/app-android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error

  appium_tests:
    name: Tests Matrix
    needs: artifact_generation_job
    runs-on: macos-latest
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        android-version: [ 5, 6, 8, 11 ]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.BEAGLE_TEMP_PAT }}
          ref: ${{ github.event.workflow_run.head_branch }}
          submodules: 'true'

      - name: Update submodules
        run: git submodule update --init --recursive --remote

      - run: git branch

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.android-version }}

      - name: Download the BFF jar file
        uses: actions/download-artifact@v2
        with:
          name: bff-jar-file

      - name: Setup JDK (11)
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Start the BFF server
        run: |
          java -jar bff.jar 2>&1 &
          sleep 30

      # Download file app-debug.apk
      - name: Download .apk file
        uses: actions/download-artifact@v2
        with:
          name: apk-file

      - name: Returns Android API level
        id: sets-android-api-level
        env:
          ANDROID_VERSION: ${{ matrix.android-version }}
        run: |
          case $ANDROID_VERSION in
          5) echo ::set-output name=result::"21" ;;
          6) echo ::set-output name=result::"23" ;;
          8) echo ::set-output name=result::"26" ;;
          11) echo ::set-output name=result::"30" ;;
          *) echo "Invalid option!" && exit 1 ;;
          esac

      - name: Config and run the Appium server
        run: |
          bash ./.github/scripts/automatedTests/appium/config_and_run_appium_server.sh

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        env:
          DEVICE_NAME: ci_pixel_api_${{steps.sets-android-api-level.outputs.result}}
          ANDROID_VERSION: ${{ matrix.android-version }}
          BFF_URL: http://10.0.2.2:8080
          APK_FILE: ${{ github.workspace }}/app-debug.apk
        with:
          avd-name: ${{env.DEVICE_NAME}} #ci_pixel_api_${{steps.sets-android-api-level.outputs.result}}
          api-level: ${{steps.sets-android-api-level.outputs.result}}
          target: google_apis
          profile: pixel
          script: |
            sleep 40
            bash ./.github/scripts/automatedTests/appium/android/install_apk_in_emulator.sh
            bash ./.github/scripts/automatedTests/appium/android/run_appium_project_android.sh

      - name: Expose failed test screenshot files
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: failed_tests_screenshots
          path: appium/project/build/screenshots/