#
# Copyright 2020 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Beagle Appium Android tests
on:
  workflow_dispatch:
  workflow_run:
    workflows: [ "Beagle Appium tests trigger" ]
    types:
      - completed

# Bellow configuration is for testing this workflow without merging to main
#on:
#  push:
#    branches:
#      - main
#    paths:
#      - '.github/**'
#  pull_request:
#    branches:
#      - main
#    paths:
#      - '.github/**'

jobs:
  bff_config_job:
    name: BFF server configuration
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      BFF_NAME: automated-test-bff
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          submodules: 'true'

      - name: Update submodules
        run: git submodule update --init --recursive --remote

      - name: Print branch info
        run: git branch

      # Cache Gradle dependencies
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      # Cache Gradle Wrapper
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Setup JDK (11)
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Generate the BFF jar file
        run: |
          if ./bff-server/gradlew bootJar -p bff-server; then
            echo "Gradle task succeeded" >&2
          else
            echo "Gradle task failed" >&2
            exit 1
          fi

      # https://remarkablemark.org/blog/2021/03/12/github-actions-deploy-to-heroku/
      - name: Heroku login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
        run: |
          cat > ~/.netrc <<EOF
            machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          EOF

      - name: Upload BFF JAR to Heroku
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          heroku plugins:install java
          heroku deploy:jar bff-server/bff/build/libs/bff.jar --app $HEROKU_API_NAME
          sleep 40
          response=$(curl --write-out '%{http_code}' --silent --output /dev/null https://radiant-crag-94685.herokuapp.com/button)
          if [ $response -eq 200 ]; then
              echo "BFF is up!"
          else
              echo "BFF is not up!" && exit 1
          fi



  apk_config_in_browserstack_job:
    name: APK compilation and upload in BrowserStack
    needs: bff_config_job
    runs-on: macos-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          submodules: 'true'

      - name: Update submodules
        run: git submodule update --init --recursive --remote

      - run: git branch

      # Cache Gradle dependencies
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      # Cache Gradle Wrapper
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Setup JDK (11)
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: abhilash1in/aws-secrets-manager-action@v1.0.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          secrets: |
            beagle/core/*
          parse-json: true

      - name: Build project app-android to generate the .apk file
        env:
          BEAGLE_CONFIG_FILE: appium/app-android/app/src/main/kotlin/br/com/zup/beagle/appiumapp/AppBeagleConfig.kt
          BFF_URL: ${{ env.BEAGLE_CORE_TEST_BEAGLE_TESTS_BFF_URL }}
        run: | # builds the app replacing localhost for the $BFF_URL
          sed -i --expression "s@http://10.0.2.2:8080@$BFF_URL@g" $BEAGLE_CONFIG_FILE
          bash ./appium/app-android/gradlew assembleDebug -p appium/app-android
          # sed -i --expression "s@$BFF_URL@http://10.0.2.2:8080@g" $BEAGLE_CONFIG_FILE

      - name: Upload the .apk file in BrowserStack and save the returned id into a file
        env:
          BFF_URL: ${{ env.BEAGLE_CORE_TEST_BEAGLE_TESTS_BFF_URL }}
          BROWSERSTACK_USER: ${{ env.BEAGLE_CORE_TEST_BEAGLE_TESTS_BROWSERSTACK_USER }}
          BROWSERSTACK_KEY: ${{ env.BEAGLE_CORE_TEST_BEAGLE_TESTS_BROWSERSTACK_KEY }}
        run: bash fastlane/automatedTests/appium/android/browserstack/setup_apk_in_browserstack_and_export_id_in_file.sh

      - name: Upload BrowserStack id file
        uses: actions/upload-artifact@v2
        with:
          name: browserstack-app-id
          path: browserstack_app_id.txt

  appium_tests:
    name: Tests
    needs: apk_config_in_browserstack_job
    runs-on: macos-latest
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        android-version: [ 4.4, 6, 8, 11 ]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          submodules: 'true'

      - name: Update submodules
        run: git submodule update --init --recursive --remote

      - run: git branch

      # Cache Gradle dependencies
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      # Cache Gradle Wrapper
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Setup JDK (11)
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: abhilash1in/aws-secrets-manager-action@v1.0.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          secrets: |
            beagle/core/*
          parse-json: true

      - name: Download BrowserStack id file
        uses: actions/download-artifact@v2
        with:
          name: browserstack-app-id

      - name: Gets BrowserStack id file content
        id: gets-browserstack-id-file
        run: |
          echo "ID recovered from file: $(<browserstack_app_id.txt)"
          echo ::set-output name=result::"$(<browserstack_app_id.txt)"

        # BrowseStack Android devices: https://www.browserstack.com/list-of-browsers-and-platforms/app_automate
      - name: Returns Android device to be used based on Android version
        id: sets-android-device
        env:
          ANDROID_VERSION: ${{ matrix.android-version }}
        run: |
          case $ANDROID_VERSION in
          4.4) echo ::set-output name=result::"Google Nexus 5" ;;
          6) echo ::set-output name=result::"Google Nexus 6" ;;
          8) echo ::set-output name=result::"Google Pixel 2" ;;
          11) echo ::set-output name=result::"Google Pixel 4" ;;
          *) echo "Invalid option!" && exit 1 ;;
          esac

      - name: Run the Appium test suite
        env:
          DEVICE_NAME: ${{steps.sets-android-device.outputs.result}}
          ANDROID_VERSION: ${{ matrix.android-version }}
          BFF_URL: ${{ env.BEAGLE_CORE_TEST_BEAGLE_TESTS_BFF_URL }}
          BROWSERSTACK_UPLOAD_ID: ${{steps.gets-browserstack-id-file.outputs.result}}
          BROWSERSTACK_USER: ${{ env.BEAGLE_CORE_TEST_BEAGLE_TESTS_BROWSERSTACK_USER }}
          BROWSERSTACK_KEY: ${{ env.BEAGLE_CORE_TEST_BEAGLE_TESTS_BROWSERSTACK_KEY }}
        run: |
          echo "Running Appium tests on device $DEVICE_NAME with Android $ANDROID_VERSION..."
          if ./appium/project/gradlew --build-cache -p appium/project cucumber \
          -Dplatform="android" \
          -Dplatform_version="$ANDROID_VERSION" \
          -Ddevice_name="$DEVICE_NAME" \
          -Dbrowserstack_user="$BROWSERSTACK_USER" \
          -Dbrowserstack_key="$BROWSERSTACK_KEY" \
          -Dapp_file="$BROWSERSTACK_UPLOAD_ID" \
          -Dbff_base_url="$BFF_URL"; then
            echo "Gradle task succeeded" >&2
          else
            echo "Gradle task failed" >&2
            exit 1
          fi

      - name: Expose failed test screenshot files
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: failed_tests_screenshots
          path: appium/project/build/screenshots/
